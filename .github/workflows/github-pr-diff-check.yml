name: PR Diff Check

on:
  workflow_call:
    inputs:
      # Define the input parameters for the workflow
      github_base_ref:
        required: true
        type: string
        description: The base branch of the pull request.
      github_head_ref:
        required: true
        type: string
        description: The head branch of the pull request.
      comparison_branches:
        description: "Comma-separated list of branches to check against (e.g., dev,qa,staging)"
        required: true
        type: string
    outputs:
      # Define the output parameters for the workflow
      encoded_comment_title:
        description: "The base64 encoded comment title"
        value: ${{ jobs.diff_check.outputs.encoded_comment_title }}
      encoded_comment_outputs:
        description: "The base64 encoded comment outputs"
        value: ${{ jobs.diff_check.outputs.encoded_comment_outputs }}
      main_outcome:
        description: "The status of the check pr job"
        value: ${{ jobs.diff_check.outputs.main_outcome }}

jobs:
  diff_check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Run commit ancestry check
        id: main
        env:
          COMPARISON_BRANCHES: ${{ inputs.comparison_branches }}
          INPUT_GITHUB_BASE_BRANCH: ${{ inputs.github_base_ref }}
          INPUT_GITHUB_HEAD_BRANCH: ${{ inputs.github_head_ref }}
        run: |
          IFS=',' read -ra BRANCHES <<< "$COMPARISON_BRANCHES"

          cd "$GITHUB_WORKSPACE"
          git fetch origin "$INPUT_GITHUB_BASE_BRANCH"
          git fetch origin "$INPUT_GITHUB_HEAD_BRANCH"

          COMMENT_TITLE="## Commit Ancestry Check\n\n"
          COMMENT_OUTPUTS=""
          ALL_BRANCHES_MISSING=true

          for BRANCH in "${BRANCHES[@]}"; do
            echo "Checking branch: $BRANCH"
            git fetch origin "$BRANCH"

            UNMERGED_COMMITS=$(git cherry origin/"$BRANCH" origin/"$INPUT_GITHUB_HEAD_BRANCH" | grep '^+' | cut -c3- || true)

            if [ -n "$UNMERGED_COMMITS" ]; then
              echo "PR contains commits not found in $BRANCH"
              COMMENT_OUTPUTS="${COMMENT_OUTPUTS}- Branch ${BRANCH} [\`Commits Missing\`]\n"

              for COMMIT in $UNMERGED_COMMITS; do
                COMMIT_MSG=$(git log --format="%h %s" -n 1 "$COMMIT")
                COMMENT_OUTPUTS="${COMMENT_OUTPUTS}  - ${COMMIT_MSG}\n"
              done

              COMMENT_OUTPUTS="${COMMENT_OUTPUTS}\n"
            else
              echo "All PR commits are present in $BRANCH"
              COMMENT_OUTPUTS="${COMMENT_OUTPUTS}- Branch ${BRANCH} [\`All Commits Present\`]\n\n"
              ALL_BRANCHES_MISSING=false
            fi
          done

          ENCODED_COMMENT_TITLE=$(echo -e "${COMMENT_TITLE}" | jq -Rsa . | base64 -w 0)
          echo "encoded_comment_title=${ENCODED_COMMENT_TITLE}" >> $GITHUB_OUTPUT

          ENCODED_COMMENT_OUTPUTS=$(echo -e "$COMMENT_OUTPUTS" | jq -Rsa . | base64 -w 0)
          echo "encoded_comment_outputs=${ENCODED_COMMENT_OUTPUTS}" >> $GITHUB_OUTPUT

          if [ "$ALL_BRANCHES_MISSING" = true ]; then
            exit 1
          fi
    outputs:
      encoded_comment_title: ${{ steps.main.outputs.encoded_comment_title }}
      encoded_comment_outputs: ${{ steps.main.outputs.encoded_comment_outputs }}
      main_outcome: ${{ steps.main.outcome }}
