name: Release

on:
  workflow_call:
    inputs:
      owner:
        required: true
        description: "Owner of the repository"
        type: string
      repositories:
        required: true
        description: "Comma-separated list of repositories to generate tokens for"
        type: string
    secrets:
      github_app_id:
        required: true
        description: "GitHub App ID for token generation"
      github_app_private_key:
        required: true
        description: "Private key for the GitHub App to generate a token"

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      # Step to check out the code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      # Step to generate GitHub App token
      - name: Generate GitHub App Token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.github_app_id }}
          private-key: ${{ secrets.github_app_private_key }}
          owner: ${{ inputs.owner }}
          repositories: ${{ inputs.repositories }}

      # Step to set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # Step to cache node modules
      - name: Cache node modules
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      # Step to install dependencies
      - name: Install dependencies
        run: npm ci

      # Step to run semantic-release
      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
