name: Github Post Comment

on:
  workflow_call:
    inputs:
      # Define the input parameters for the workflow
      github_repository:
        required: true
        type: string
        description: "The GitHub repository in the format 'owner/repo'"
      github_event_pull_request_number:
        required: true
        type: number
        description: "The pull request number to list modified files for"
      encoded_comment_title:
        required: false
        type: string
        description: "The base64 encoded comment title"
      encoded_comment_outputs:
        required: false
        type: string
        description: "The base64 encoded comment outputs"
      encoded_comment_results:
        required: false
        type: string
        description: "The base64 encoded comment results from previous steps"
      artifact_id:
        required: false
        type: string
        description: "The ID of the uploaded artifact"
      artifact_url:
        required: false
        type: string
        description: "The URL of the uploaded artifact"
    secrets:
      github_secret_token:
        required: true
        description: "The GitHub token to authenticate API requests"

jobs:
  github_post_comment:
    name: main
    runs-on: ubuntu-latest
    steps:
      # Step to checkout the code
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Add Artifact References
        id: add_artifact_references
        if: inputs.artifact_id != ''
        env:
          INPUT_GITHUB_ARTIFACT_ID: ${{ inputs.artifact_id }}
          INPUT_GITHUB_ARTIFACT_URL: ${{ inputs.artifact_url }}
        run: |
          # Add artifact references to the comment

          ARTIFACT_COMMENT="Please, download the artifact here: [${INPUT_GITHUB_ARTIFACT_ID}](${INPUT_GITHUB_ARTIFACT_URL})"
          echo "artifact_comment=${ARTIFACT_COMMENT}" >> $GITHUB_OUTPUT

      - name: Post Comment
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.github_secret_token }}
          INPUT_GITHUB_REPOSITORY: ${{ inputs.github_repository }}
          INPUT_GITHUB_EVENT_PULL_REQUEST_NUMBER: ${{ inputs.github_event_pull_request_number }}
          ENCODED_COMMENT_TITLE: ${{ inputs.encoded_comment_title }}
          ENCODED_COMMENT_OUTPUTS: ${{ inputs.encoded_comment_outputs }}
          ENCODED_COMMENT_RESULTS: ${{ inputs.encoded_comment_results }}
          ARTIFACT_COMMENT: ${{ steps.add_artifact_references.outputs.artifact_comment }}
        run: |
          # Post the output to the Pull Request comment

          COMMENT_TITLE=$(echo "${ENCODED_COMMENT_TITLE}" | base64 -d | jq -r .)
          COMMENT_OUTPUTS=$(echo "${ENCODED_COMMENT_OUTPUTS}" | base64 -d | jq -r .)
          COMMENT_RESULTS=$(echo "${ENCODED_COMMENT_RESULTS}" | base64 -d | jq -r .)

          if [ -n "$ARTIFACT_COMMENT" ]; then
            COMMENT_OUTPUTS="${COMMENT_OUTPUTS}\n\n${ARTIFACT_COMMENT}"
          fi

          BODY_MESSAGE=$(echo -e "${COMMENT_RESULTS}\n\n${COMMENT_TITLE}\n\n${COMMENT_OUTPUTS}")

          echo "BODY_MESSAGE=${BODY_MESSAGE}"

          # Prepare the JSON payload safely
          BODY_PAYLOAD=$(jq -nc --arg body "$BODY_MESSAGE" '{body: $body}')

          # Create a temporary file to store the HTTP response
          HTTP_RESPONSE=$(mktemp)

          # Post the output as a single comment to the Pull Request
          STATUS_RESPONSE=$(curl -s -o "$HTTP_RESPONSE" -X POST -H "Authorization: Bearer ${INPUT_GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${INPUT_GITHUB_REPOSITORY}/issues/${INPUT_GITHUB_EVENT_PULL_REQUEST_NUMBER}/comments \
            -d "${BODY_PAYLOAD}" -w "%{http_code}")

          if [[ "$STATUS_RESPONSE" =~ ^2 ]]; then
            echo "Request succeeded with status: $STATUS_RESPONSE"
          else
            echo "Request failed with status: $STATUS_RESPONSE"
            cat "$HTTP_RESPONSE"
            exit 1
          fi

          # Clean up the temporary file
          rm -f "$HTTP_RESPONSE"
